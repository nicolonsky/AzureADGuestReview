{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "defaultValue": "logic-guestreview",
            "type": "String",
            "metadata": {
                "description": "Name of the Logic App"
            }
        },
        "functionAppName": {
            "type": "String",
            "defaultValue": "[concat('func-','guestreview-', substring(uniqueString(resourceGroup().id), 0, 6))]",
            "metadata": {
                "description": "Unique name for the Azure Function Web App"
            }
        },
        "keyVaultName": {
            "type": "String",
            "defaultValue": "[concat('kv-','guestreview-', substring(uniqueString(resourceGroup().id), 0, 6))]",
            "metadata": {
                "description": "Unique name for the Key Vault"
            }
        },
        "tenantId": {
            "type": "secureObject",
            "defaultValue": {
                "secretName": "TenantID",
                "secretValue": ""
            },
            "metadata": {
                "description": "Your Azure AD Tenant ID"
            }
        },
        "applicationId": {
            "type": "secureObject",
            "defaultValue": {
                "secretName": "ApplicationID",
                "secretValue": ""
            },
            "metadata": {
                "description": "Application ID of the App registration"
            }
        },
        "clientSecret": {
            "type": "secureObject",
            "defaultValue": {
                "secretName": "ClientSecret",
                "secretValue": ""
            },
            "metadata": {
                "description": "Client Secret of the App registration"
            }
        }
    },
    "variables": {
        "office365ConnectionName": "office365",
        "fetchLastSigninAndManagerFunction": "FetchLastSigninAndManager",
        "updateGuestManagementMetaFunction": "UpdateGuestManagementMeta",
        "functionAppId": "[concat(resourceGroup().id,'/providers/Microsoft.Web/sites/', parameters('functionAppName'))]"
    },
    "resources": [

        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('office365ConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', variables('office365ConnectionName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections',variables('office365ConnectionName'))]"
            ],
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "FetchSignIn_Function": {
                            "runAfter": {
                                "UpdateGuestManagementMeta_Function": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FetchSignIn-Function-URL",
                                        "type": "string",
                                        "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2018-02-01').defaultHostName , '/api/', variables('fetchLastSigninAndManagerFunction'),'?code=', listkeys(concat(variables('functionAppId'), '/host/default/'),'2016-08-01').functionKeys.default)]"
                                    }
                                ]
                            }
                        },
                        "Fetch_Guest_users_from_Microsoft_Graph": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "clientId": "@variables('ApplicationID')",
                                    "secret": "@variables('ClientSecret')",
                                    "tenant": "@variables('TenantID')",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "queries": {
                                    "$filter": "userType eq 'Guest'",
                                    "$select": "id,userPrincipalName, userType,mail, displayName, accountEnabled"
                                },
                                "uri": "https://graph.microsoft.com/v1.0/users"
                            },
                            "runAfter": {
                                "Initialize_ClientSecret": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "paginationPolicy": {
                                    "minimumItemCount": 100000
                                }
                            },
                            "type": "Http"
                        },
                        "Get_ApplicationID_from_Key_Vault": {
                            "runAfter": {
                                "Initialize_TenantID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://vault.azure.net",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "queries": {
                                    "api-version": "2016-10-01"
                                },
                                "uri": "[concat('@{variables(''Azure Key Vault URL'')}/secrets/', parameters('applicationId').secretName)]"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Get_Application_Secret_from_Key_Vault": {
                            "runAfter": {
                                "Initialize_ApplicationID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://vault.azure.net",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "queries": {
                                    "api-version": "2016-10-01"
                                },
                                "uri": "[concat('@{variables(''Azure Key Vault URL'')}/secrets/', parameters('clientSecret').secretName)]"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Get_TenantID_from_Key_Vault": {
                            "runAfter": {
                                "FetchSignIn_Function": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://vault.azure.net",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "queries": {
                                    "api-version": "2016-10-01"
                                },
                                "uri": "[concat('@{variables(''Azure Key Vault URL'')}/secrets/', parameters('tenantId').secretName)]"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "Initialize_ApplicationID": {
                            "runAfter": {
                                "Get_ApplicationID_from_Key_Vault": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ApplicationID",
                                        "type": "string",
                                        "value": "@{body('Get_ApplicationID_from_Key_Vault')?['value'] }"
                                    }
                                ]
                            }
                        },
                        "Initialize_ClientSecret": {
                            "runAfter": {
                                "Get_Application_Secret_from_Key_Vault": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ClientSecret",
                                        "type": "string",
                                        "value": "@{body('Get_Application_Secret_from_Key_Vault')?['value'] }"
                                    }
                                ]
                            }
                        },
                        "Initialize_TenantID": {
                            "runAfter": {
                                "Get_TenantID_from_Key_Vault": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TenantID",
                                        "type": "string",
                                        "value": "@{body('Get_TenantID_from_Key_Vault')?['value'] }"
                                    }
                                ]
                            }
                        },
                        "Parse_Guest_Users": {
                            "runAfter": {
                                "Fetch_Guest_users_from_Microsoft_Graph": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Fetch_Guest_users_from_Microsoft_Graph')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "accountEnabled": {
                                                        "type": "boolean"
                                                    },
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "mail": {},
                                                    "userPrincipalName": {
                                                        "type": "string"
                                                    },
                                                    "userType": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "userPrincipalName",
                                                    "userType",
                                                    "mail",
                                                    "displayName",
                                                    "accountEnabled"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Process_each_guest": {
                            "foreach": "@body('Parse_Guest_Users')?['value']",
                            "actions": {
                                "Fetch_last_sign_in_and_manager": {
                                    "runAfter": {
                                        "Parse_guest_user": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "userId": "@body('Parse_guest_user')?['id']"
                                        },
                                        "method": "POST",
                                        "uri": "@variables('FetchSignIn-Function-URL')"
                                    }
                                },
                                "Parse_Function_output": {
                                    "runAfter": {
                                        "Fetch_last_sign_in_and_manager": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Fetch_last_sign_in_and_manager')",
                                        "schema": {
                                            "properties": {
                                                "inviterUpn": {
                                                    "type": "string"
                                                },
                                                "invitorId": {
                                                    "type": "string"
                                                },
                                                "lastReview": {
                                                    "type": "string"
                                                },
                                                "lastSignIn": {
                                                    "type": "string"
                                                },
                                                "managerUpn": {
                                                    "type": "string"
                                                },
                                                "userId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_guest_user": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('Process_each_guest')",
                                        "schema": {
                                            "properties": {
                                                "accountEnabled": {
                                                    "type": "boolean"
                                                },
                                                "displayName": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "mail": {},
                                                "userPrincipalName": {
                                                    "type": "string"
                                                },
                                                "userType": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Verify_last_review_date": {
                                    "actions": {
                                        "Send_Review_Mail_to_Manager": {
                                            "runAfter": {},
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "Message": {
                                                        "Body": "Dear user,\n\nYou receive this email because you are either responsible and/or invited the guest account  '@{items('Process_each_guest')?['displayName']}':\n\n* Account enabled: @{body('Parse_guest_user')?['accountEnabled']}\n*  Username:  @{body('Parse_guest_user')?['userPrincipalName']}\n*  E-mail: @{body('Parse_guest_user')?['mail']}\n*  Last sign-in:  @{body('Parse_Function_output')?['lastSignIn']}\n\nThis account was last revieved on: @{body('Parse_Function_output')?['lastReview']}.\n",
                                                        "HeaderText": "Please review access for guest account \"@{body('Parse_guest_user')?['displayName']}\"",
                                                        "HideHTMLMessage": true,
                                                        "Importance": "Normal",
                                                        "Options": "Approve, Suspend, Delete",
                                                        "SelectionText": "Review access",
                                                        "Subject": "Please review access for guest account \"@{body('Parse_guest_user')?['displayName']}\"",
                                                        "To": "@{body('Parse_Function_output')?['managerUpn']}"
                                                    },
                                                    "NotificationUrl": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                    }
                                                },
                                                "path": "/approvalmail/$subscriptions"
                                            }
                                        },
                                        "Switch": {
                                            "runAfter": {
                                                "Send_Review_Mail_to_Manager": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "cases": {
                                                "Approve": {
                                                    "case": "Approve",
                                                    "actions": {
                                                        "Update_lastReview_Timestamp": {
                                                            "runAfter": {},
                                                            "type": "Http",
                                                            "inputs": {
                                                                "body": {
                                                                    "guestUserId": "@body('Parse_Function_output')?['userId']",
                                                                    "inviterId": "@body('Parse_Function_output')?['invitorId']",
                                                                    "inviterUpn": "@body('Parse_Function_output')?['inviterUpn']",
                                                                    "lastReview": "@utcNow()"
                                                                },
                                                                "method": "POST",
                                                                "uri": "@variables('UpdateGuestManagementMeta-Function-URL')"
                                                            },
                                                            "description": "Call Azure Function to update Extension Attribute"
                                                        }
                                                    }
                                                },
                                                "Delete": {
                                                    "case": "Delete",
                                                    "actions": {
                                                        "Delete_Account": {
                                                            "runAfter": {},
                                                            "type": "Http",
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://graph.microsoft.com",
                                                                    "clientId": "@variables('ApplicationID')",
                                                                    "secret": "@variables('ClientSecret')",
                                                                    "tenant": "@variables('TenantID')",
                                                                    "type": "ActiveDirectoryOAuth"
                                                                },
                                                                "method": "DELETE",
                                                                "uri": "https://graph.microsoft.com/v1.0/users/@{items('Process_each_guest')?['id']}"
                                                            }
                                                        }
                                                    }
                                                },
                                                "Suspend": {
                                                    "case": "Suspend",
                                                    "actions": {
                                                        "Disable_Account": {
                                                            "runAfter": {},
                                                            "type": "Http",
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://graph.microsoft.com",
                                                                    "clientId": "@variables('ApplicationID')",
                                                                    "secret": "@variables('ClientSecret')",
                                                                    "tenant": "@variables('TenantID')",
                                                                    "type": "ActiveDirectoryOAuth"
                                                                },
                                                                "body": {
                                                                    "accountEnabled": false
                                                                },
                                                                "method": "PATCH",
                                                                "uri": "https://graph.microsoft.com/v1.0/users/@{items('Process_each_guest')?['id']}"
                                                            }
                                                        },
                                                        "Update_lastReview_Timestamp_2": {
                                                            "runAfter": {
                                                                "Disable_Account": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Http",
                                                            "inputs": {
                                                                "body": {
                                                                    "guestUserId": "@body('Parse_Function_output')?['userId']",
                                                                    "inviterId": "@body('Parse_Function_output')?['invitorId']",
                                                                    "inviterUpn": "@body('Parse_Function_output')?['inviterUpn']",
                                                                    "lastReview": "@utcNow()"
                                                                },
                                                                "method": "POST",
                                                                "uri": "@variables('UpdateGuestManagementMeta-Function-URL')"
                                                            },
                                                            "description": "Call Azure Function to update Extension Attribute"
                                                        }
                                                    }
                                                }
                                            },
                                            "default": {
                                                "actions": {}
                                            },
                                            "expression": "@body('Send_Review_Mail_to_Manager')?['SelectedOption']",
                                            "type": "Switch"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_Function_output": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@body('Parse_Function_output')?['managerUpn']",
                                                    "@"
                                                ]
                                            },
                                            {
                                                "greater": [
                                                    "@div(sub(ticks(utcNow()), ticks(body('Parse_Function_output')?['lastReview'])),864000000000)",
                                                    "@variables('ApprovalFrequency')"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Parse_Guest_Users": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Set_Approval_Frequency_(Number_of_Days)": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ApprovalFrequency",
                                        "type": "integer",
                                        "value": 30
                                    }
                                ]
                            }
                        },
                        "Set_Azure_Key_Vault_URL": {
                            "runAfter": {
                                "Set_Approval_Frequency_(Number_of_Days)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Azure Key Vault URL",
                                        "type": "string",
                                        "value": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net')]"
                                    }
                                ]
                            }
                        },
                        "UpdateGuestManagementMeta_Function": {
                            "runAfter": {
                                "Set_Azure_Key_Vault_URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UpdateGuestManagementMeta-Function-URL",
                                        "type": "string",
                                        "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2018-02-01').defaultHostName , '/api/', variables('updateGuestManagementMetaFunction'),'?code=', listkeys(concat(variables('functionAppId'), '/host/default/'),'2016-08-01').functionKeys.default)]"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections',variables('office365ConnectionName'))]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', variables('office365ConnectionName'))]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
